<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zy.p2p.base.mapper.VedioAuthMapper">


    <resultMap id="BaseResultMap" type="com.zy.p2p.base.domain.VedioAuth">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="auditTime" jdbcType="TIMESTAMP" property="auditTime"/>
        <result column="applyTime" jdbcType="TIMESTAMP" property="applyTime"/>

        <association property="applier" javaType="com.zy.p2p.base.domain.Logininfo">
            <id column="ap_id" property="id"></id>
            <result column="ap_username" property="username"></result>
        </association>
        <association property="auditor"  javaType="com.zy.p2p.base.domain.Logininfo">
            <id column="au_id" property="id"></id>
            <result column="au_username" property="username"></result>
        </association>
    </resultMap>



    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from javas1.vedioauth
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.zy.p2p.base.domain.VedioAuth">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into javas1.vedioauth (state, remark, auditTime,
        applyTime, auditor_id, applier_id
        )
        values (#{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP},
        #{applyTime,jdbcType=TIMESTAMP}, #{auditor.id,jdbcType=BIGINT}, #{applier.id,jdbcType=BIGINT}
        )
    </insert>


    <update id="updateByPrimaryKey" parameterType="com.zy.p2p.base.domain.VedioAuth">
    update javas1.vedioauth
    set state = #{state,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{auditTime,jdbcType=TIMESTAMP},
      applyTime = #{applyTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditor.id,jdbcType=BIGINT},
      applier_id = #{applier.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <sql id="base_where">
        <where>
            <if test="beginDate!=null">
                and applyTime &gt;= #{beginDate}
            </if>
            <if test="endDate!=null">
                and applyTime &lt;= #{endDate}
            </if>
            <if test="state>-1">
                and v.state = #{state}
            </if>
        </where>
    </sql>
    <sql id="full_column">
        v.id, v.state, v.remark, v.auditTime, v.applyTime,au.id AS au_id,au.`username` as au_username,ap.`id` AS ap_id,ap.`username` as ap_username
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="full_column"/>
        FROM vedioauth AS v INNER JOIN logininfo AS ap ON v.`applier_id`=ap.`id` INNER JOIN logininfo AS au ON
        v.`auditor_id`=au.`id`
        WHERE v.id = #{id};
    </select>
    <select id="queryForCount" resultType="int">
        select count(id)
        from vedioauth v
        <include refid="base_where"/>
    </select>
    <select id="query" resultMap="BaseResultMap">
        SELECT
        <include refid="full_column"/>
        FROM vedioauth AS v INNER JOIN logininfo AS ap ON v.`applier_id`=ap.`id` INNER JOIN logininfo AS au ON
        v.`auditor_id`=au.`id`
        <include refid="base_where"/>

        LIMIT #{start},#{pageSize}
    </select>
</mapper>