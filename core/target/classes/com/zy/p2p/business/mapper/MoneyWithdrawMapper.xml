<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.p2p.business.mapper.MoneyWithdrawMapper" >

  <resultMap id="BaseResultMap" type="MoneyWithdraw" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="accountNumber" property="accountNumber" jdbcType="VARCHAR" />
    <result column="bankForkName" property="bankForkName" jdbcType="VARCHAR" />
    <result column="bankName" property="bankName" jdbcType="VARCHAR" />
    <result column="accountName" property="accountName" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="charge" property="charge" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />
    
    <association property="applier" javaType="Logininfo" columnPrefix="ap_">
     	<id property="id" column="id"/>
     	<result property="username" column="username"/>
     </association>
     
     <association property="auditor" javaType="Logininfo" columnPrefix="au_">
     	<id property="id" column="id"/>
     	<result property="username" column="username"/>
     </association>
     
  </resultMap>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into `moneywithdraw` (accountNumber, bankForkName, bankName, accountName, amount, state, 
      charge, remark, auditTime, applyTime, auditor_id, applier_id)
    values (#{accountNumber,jdbcType=VARCHAR}, #{bankForkName,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{state,jdbcType=TINYINT}, 
      #{charge,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{auditor.id,jdbcType=BIGINT}, #{applier.id,jdbcType=BIGINT})
  </insert>
  
  <update id="updateByPrimaryKey">
    update `moneywithdraw`
    set accountNumber = #{accountNumber,jdbcType=VARCHAR},
      bankForkName = #{bankForkName,jdbcType=VARCHAR},
      bankName = #{bankName,jdbcType=VARCHAR},
      accountName = #{accountName,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      state = #{state,jdbcType=TINYINT},
      charge = #{charge,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{auditTime,jdbcType=TIMESTAMP},
      applyTime = #{applyTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditor.id,jdbcType=BIGINT},
      applier_id = #{applier.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="base_column">
  	m.id, m.accountNumber, m.bankForkName, m.bankName, m.accountName, m.amount, m.state, m.charge, 
    	m.remark, m.auditTime, m.applyTime,ap.id as ap_id,ap.username as ap_username,au.id as au_id,au.username as au_username 
  </sql>
  
  <sql id="base_where">
  	<where>
  		<if test="applierId!=null">
  			AND m.applier_id = #{applierId}
  		</if>
  		<if test="beginDate!=null">
  			AND m.applyTime &gt;= #{beginDate}
  		</if>
  		<if test="endDate!=null">
  			AND m.applyTime &lt;=#{endDate}
  		</if>
  		<if test="state>-1">
  			AND m.state = #{state}
  		</if>
  	</where>
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select <include refid="base_column" />
    from `moneywithdraw` m JOIN logininfo ap ON m.applier_id=ap.id LEFT JOIN logininfo au ON m.auditor_id=au.id
    where m.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="queryForCount" resultType="int">
  	SELECT count(m.id) FROM moneywithdraw m
  	<include refid="base_where" />
  </select>
  
  <select id="query" resultMap="BaseResultMap" >
    select <include refid="base_column" />
    from `moneywithdraw` m JOIN logininfo ap ON m.applier_id=ap.id LEFT JOIN logininfo au ON m.auditor_id=au.id
    <include refid="base_where" />
    LIMIT #{start},#{pageSize}
  </select>
</mapper>